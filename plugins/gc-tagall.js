const handler = async (m, {isOwner, isAdmin, conn, text, participants, args, command, usedPrefix}) => {
  if (usedPrefix == 'a' || usedPrefix == 'A') return;
  if (!(isAdmin || isOwner)) {
    global.dfail('admin', m, conn);
    throw false;
  }
  const pesan = args.join` `;
const oi = `üì© ùë™ùë∂ùë¥ùëºùëµùë∞ùë™ùë®ùë´ùë∂: ${pesan}\n‚úÖ ùë∞ùëµùëªùë¨ùëÆùëπùë®ùëµùëªùë¨ùë∫: _*${participants.length}*_`;
  let teks = `‚î£ *ùë¨ùëªùë∞ùë∏ùëºùë¨ùëªùë® ùëÆùë¨ùëµùë¨ùëπùë®ùë≥ ùë™ùë∂ùë¥ùëºùëµùë∞ùë´ùë®ùë´ ùë≠ùë∞ùë≠ùëªùíÄ ùë™ùë¨ùëµùëªùë∫* ‚î´\n\n ${oi}\n\n‚îè‚û§‚ùó ùëπùë¨ùëΩùë∞ùëΩùë®ùëµ ùë¥ùëπùë´ ‚ùó\n`;
  for (const mem of participants) {
    teks += `‚î£üöª @${mem.id.split('@')[0]}\n`;
  }
  teks += `‚îó‚û§ ùë™ùíêùíéùíñùíèùíäùíÖùíÇùíÖ ùë≠ùíäùíáùíïùíö ùë™ùíÜùíèùíïùíî`;
  conn.sendMessage(m.chat, {text: teks, mentions: participants.map((a) => a.id)} );
};
handler.help = ['tagall <mesaje>', 'invocar <mesaje>'];
handler.tags = ['group'];
handler.command = /^(tagall|invocar|invocacion|todos|invocaci√≥n)$/i;
handler.admin = true;
handler.group = true;
export default handler;
